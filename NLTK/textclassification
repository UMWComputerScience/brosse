#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Wed Jun  6 14:34:15 2018

@author: bryceanderson
"""

import nltk
from nltk.corpus import stopwords
stopwords = set(stopwords.words('english'))
def update_stopwords(aset):
    aset.add("'s")
    aset.add("n't")
    aset.add("'m")
    aset.add("dont")
    return aset
stopwords = update_stopwords(stopwords)
def prettify(string):
    string = string.replace(",","")
    string = string.replace("'","")
    string = string.replace(".","")
    string = string.replace("!","")
    string = string.replace("?","")
    string = string.replace('"',"")
    string = string.replace(";","")
    string = string.replace(":","")
    string = string.replace("\n"," ")
    string = string.replace("(","")
    string = string.replace(")","")
    string = string.replace("-","")
    string = string.replace("`","")
    string = string.lower()
    return string
#Tokenizes and orders words based on frequency
def prep(string, stopwords):
    tokens = nltk.word_tokenize(string)
    tokens = nltk.Text(tokens)
    filtered_tokens = []
    for w in tokens:
        if w not in stopwords:
            filtered_tokens.append(w)
        allwords = nltk.FreqDist(w.lower() for w in filtered_tokens)
        wds = list(allwords.keys())
        vals = list(allwords.values())
        zipwords = zip(vals, wds)
        zipwords = sorted(zipwords, reverse=True)
    return zipwords
#%%
doc = open('raplyrics.txt','r')
rockdoc = open('rocklyrics.txt','r')
raw=doc.read()
rockraw = rockdoc.read()
raw = prettify(raw)
rockraw = prettify(rockraw)
rapfreq = prep(raw, stopwords)
rockfreq = prep(rockraw, stopwords)
#def song_features(word):
    
























